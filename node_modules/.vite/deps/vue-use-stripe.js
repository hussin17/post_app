import "./chunk-BYTJ6LW2.js";
import {
  defineComponent,
  h,
  onBeforeUnmount,
  onMounted,
  ref,
  watchEffect
} from "./chunk-VBJ4LH5I.js";
import "./chunk-OROXOI2D.js";

// node_modules/vue-use-stripe/dist/index.esm.js
var E = Object.assign;
var d = { base: { color: "#32325d", fontFamily: "Helvetica Neue, Roboto", fontSmoothing: "antialiased", fontSize: "16px", "::placeholder": { color: "#aab7c4" } }, invalid: { color: "#fa755a", iconColor: "#fa755a" } };
function w({ key: n, elements: r = [], constructorOptions: i, elementsOptions: f }) {
  const l = ref(null), o = ref(null), a = r.map(() => ref(null)), t = () => typeof window == "undefined" || !window.Stripe ? false : (l.value = window.Stripe(n, i), o.value = l.value.elements(f), r.forEach(({ type: e, options: s }, c) => {
    a[c].value = o.value.create(e, E({ style: d }, s));
  }), true), v = (e) => {
    if (e)
      try {
        e.unmount(), e.destroy();
      } catch (s) {
      }
  };
  return onMounted(() => {
    if (!t()) {
      let e = 0;
      const s = setInterval(() => {
        e++;
        const c = t();
        (c || e > 10) && (clearInterval(s), c || console.error("Stripe library is not loaded"));
      }, 500);
    }
  }), onBeforeUnmount(() => {
    a.forEach((e) => v(e.value));
  }), { stripe: l, stripeElements: o, elements: a };
}
var p = ["change", "focus", "blur", "click", "ready"];
var g = defineComponent({ name: "StripeElement", props: { element: { type: Object, default: null } }, emits: p, setup(n, { emit: r }) {
  const i = ref(null), f = (l) => {
    const [o, ...a] = p;
    for (const t of a)
      l.on(t, () => r(t));
    n.element.on(o, (t) => r(o, t));
  };
  return onMounted(() => {
    watchEffect(() => {
      if (!n.element)
        return;
      f(n.element), n.element.mount(i.value);
    });
  }), { domRef: i };
}, render() {
  return h("div", { ref: "domRef" });
} });
export {
  g as StripeElement,
  d as baseStyle,
  w as useStripe
};
//# sourceMappingURL=vue-use-stripe.js.map
